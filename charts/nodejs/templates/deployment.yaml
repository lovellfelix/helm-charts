{{- if .Capabilities.APIVersions.Has "apps/v1" }}
apiVersion: apps/v1
{{ else }}
apiVersion: apps/v1beta1
{{- end }}
kind: Deployment
metadata:
  name: {{ template "nodejs.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "nodejs.metaLabels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "nodejs.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "nodejs.metaLabels" . | nindent 8 }}
        {{- if .Values.podLabels }}        
        {{ toYaml .Values.podLabels | nindent 8 }}
        {{- end -}}{{- if .Values.podAnnotations }}
      annotations:
        {{- if not .Values.configSecrets }}
        checksum/secret: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        {{- end }}
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
    spec:
{{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range $pullSecret := .Values.image.pullSecrets }}
        - name: {{ $pullSecret }}
      {{- end }}
{{- end }}
      securityContext:
{{ toYaml .Values.securityContext | indent 8 }}
      containers:
        - name: {{ template "nodejs.name" . }}-{{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort | default 5000 }}
              protocol: TCP
            {{ if .Values.extraPorts }}
            {{ toYaml .Values.extraPorts | nindent 12 }}
            {{- end }}
          env:
          - name: NODE_ENV
            value: {{ .Values.appEnv }}
          - name: PORT
            value: "{{ .Values.service.internalPort | default 5000 }}"
          {{- range $key, $value := .Values.environment }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}
          {{- range $key, $value := .Values.configSecrets }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ template "nodejs.name" $ }}
                key: {{ $key }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if and (.Values.liveness) (.Values.liveness.enabled) }}
          livenessProbe:
            httpGet:
              path: {{ .Values.liveness.path | default "/healthz" }}
              port: {{ .Values.service.internalPort | default 5000 }}
            initialDelaySeconds: {{ .Values.liveness.delay | default 15 }}
            timeoutSeconds: {{ .Values.liveness.timeout | default 15 }}
            periodSeconds: {{ .Values.liveness.periodSeconds | default 15 }}
          {{- end }}
          {{- if and (.Values.readiness) (.Values.readiness.enabled) }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readiness.path | default "/healthz" }}
              port: {{ .Values.service.internalPort | default 5000 }}
            initialDelaySeconds: {{ .Values.readiness.delay | default 15 }}
            timeoutSeconds: {{ .Values.readiness.timeout | default 15 }}
            periodSeconds: {{ .Values.readiness.periodSeconds | default 15 }}
          {{- end }}
    {{- if or .Values.affinity .Values.podAntiAffinity }}
      affinity:
      {{- with .Values.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if eq .Values.podAntiAffinity "hard" }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "{{ .Values.podAntiAffinityTopologyKey }}"
              labelSelector:
                matchLabels:
                  {{- include "nodejs.selectorLabels" . | nindent 18 }}
      {{- else if eq .Values.podAntiAffinity "soft" }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: "{{ .Values.podAntiAffinityTopologyKey }}"
                labelSelector:
                  matchLabels:
                    {{- include "nodejs.selectorLabels" . | nindent 20 }}
      {{- end }}
    {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{ toYaml .Values.nodeSelector }}
      {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{ end }}
